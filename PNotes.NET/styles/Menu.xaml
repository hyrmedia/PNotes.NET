<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:net="clr-namespace:PNotes.NET">

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource NormalTextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border SnapsToDevicePixels="true" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type MenuItem}" 
                     x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="Bg" 
                       Fill="{TemplateBinding Background}"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="IconBorder"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        Margin="1"
                        BorderThickness="1">
                    <ContentPresenter x:Name="Icon" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      VerticalAlignment="Center" 
                                      ContentSource="Icon"/>
                </Border>
                <Border x:Name="GlyphPanel" 
                        Visibility="Hidden" 
                        Margin="1" 
                        Width="20" 
                        Height="20" 
                        Background="{DynamicResource MenuItemIconBackgroundBrush}" 
                        BorderBrush="{DynamicResource MenuCheckboxBorderBrush}" 
                        BorderThickness="1">
                    <Path x:Name="Glyph" 
                          VerticalAlignment="Center" 
                          StrokeThickness="2"
                          HorizontalAlignment="Center"
                          SnapsToDevicePixels="False"
                          Stroke="{DynamicResource MenuGlyphBrush}" 
                          Data="{DynamicResource NormalCheckMark}"/>
                </Border>
                <ContentPresenter x:Name="cont" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  Margin="{TemplateBinding Padding}" 
                                  TextBlock.Foreground="{DynamicResource NormalTextBrush}"
                                  Grid.Column="2" 
                                  ContentSource="Header" 
                                  RecognizesAccessKey="True" VerticalAlignment="Center"/>
                <TextBlock x:Name="bt"  
                           Margin="{TemplateBinding Padding}" 
                           Foreground="{DynamicResource NormalTextBrush}"
                           Grid.Column="4" 
                           Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="IconBorder" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <!--<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>-->
                <Setter Property="Background" TargetName="IconBorder" Value="{DynamicResource MenuItemIconBackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="IconBorder" Value="{DynamicResource MenuCheckboxBorderBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="true"/>
                    <Condition Property="Icon" Value="{x:Null}"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="IconBorder" Value="Collapsed"/>
            </MultiTrigger>
            <!--<Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>-->
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Fill" TargetName="Bg" Value="{DynamicResource MenuBackgroundHoverBrush}"/>
                <Setter Property="TextBlock.Foreground" TargetName="cont" Value="{DynamicResource MenuSelectedTextBrush}"/>
                <Setter Property="Foreground" TargetName="bt" Value="{DynamicResource MenuSelectedTextBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}"/>
                <Setter Property="Stroke" TargetName="Glyph" Value="{DynamicResource MenuGlyphDisabledBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" 
                     TargetType="{x:Type ContentControl}">
        <Border Background="{DynamicResource MenuItemBackgroundBrush}" 
                BorderBrush="{DynamicResource MenuBorderBrush}" 
                BorderThickness="1,0,1,1">
            <Grid>
                <Rectangle HorizontalAlignment="Left" 
                           Margin="2" 
                           Width="28" 
                           Fill="{DynamicResource MenuItemIconBackgroundBrush}" 
                           RadiusX="2" 
                           RadiusY="2"/>
                <Rectangle HorizontalAlignment="Left" 
                           Margin="30,2,0,2" 
                           Width="1" 
                           Fill="Transparent"/>
                <Rectangle HorizontalAlignment="Left" 
                           Margin="31,2,0,2" 
                           Width="1" 
                           Fill="Transparent"/>
                <ContentPresenter Margin="1,0" 
                                  Grid.ColumnSpan="2"/>
            </Grid>
        </Border>
    </ControlTemplate>
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <Style x:Key="MenuScrollButton" 
           BasedOn="{x:Null}" 
           TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel SnapsToDevicePixels="true" Background="Transparent">
                        <Rectangle x:Name="R1" 
                                   Width="1" 
                                   Fill="Transparent" 
                                   DockPanel.Dock="Right"/>
                        <Rectangle x:Name="B1" 
                                   Height="1" 
                                   Fill="Transparent" 
                                   DockPanel.Dock="Bottom"/>
                        <Rectangle x:Name="L1" 
                                   Width="1" 
                                   Fill="Transparent" 
                                   DockPanel.Dock="Left"/>
                        <Rectangle x:Name="T1" 
                                   Height="1" 
                                   Fill="Transparent" 
                                   DockPanel.Dock="Top"/>
                        <ContentPresenter x:Name="ContentContainer" 
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"
                                          Margin="2,2,2,2"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" 
                                    TargetName="R1" 
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            <Setter Property="Fill" 
                                    TargetName="B1" 
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            <Setter Property="Fill" 
                                    TargetName="L1" 
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter Property="Fill" 
                                    TargetName="T1" 
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter Property="Margin" 
                                    TargetName="ContentContainer" 
                                    Value="3,3,1,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Geometry x:Key="MenuUpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="MenuDownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" 
           BasedOn="{x:Null}" 
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="1">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton Focusable="false" 
                                      Style="{StaticResource MenuScrollButton}" 
                                      Grid.Column="0" 
                                      Grid.Row="0" 
                                      Command="{x:Static ScrollBar.LineUpCommand}" 
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" 
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}" 
                                              ConverterParameter="0">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" 
                                             RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" 
                                             RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" 
                                             RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" 
                                             RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource MenuUpArrow}" Fill="{DynamicResource MenuScrollArrowBrush}"/>
                        </RepeatButton>
                        <RepeatButton Focusable="false" 
                                      Style="{StaticResource MenuScrollButton}" 
                                      Grid.Column="0" 
                                      Grid.Row="2" 
                                      Command="{x:Static ScrollBar.LineDownCommand}" 
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" 
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}" 
                                              ConverterParameter="100">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" 
                                             RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" 
                                             RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" 
                                             RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" 
                                             RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource MenuDownArrow}" Fill="{DynamicResource MenuScrollArrowBrush}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" 
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="OuterBorder" 
                       RadiusX="0" 
                       RadiusY="0"/>
            <Rectangle x:Name="Bg" 
                       Margin="0" 
                       Fill="{TemplateBinding Background}" 
                       Stroke="{TemplateBinding BorderBrush}" 
                       StrokeThickness="1" 
                       RadiusX="1" 
                       RadiusY="1"/>
            <DockPanel>
                <ContentPresenter x:Name="Icon" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  Margin="4,0,6,0" 
                                  VerticalAlignment="Center" 
                                  ContentSource="Icon"/>
                <Path x:Name="GlyphPanel" 
                      Visibility="Collapsed" 
                      FlowDirection="LeftToRight" 
                      Margin="7,0,0,0" 
                      VerticalAlignment="Center" 
                      HorizontalAlignment="Center"
                      StrokeThickness="2"
                      Stroke="{DynamicResource MenuGlyphBrush}" 
                      Data="{DynamicResource NormalCheckMark}"/>
                <ContentPresenter x:Name="cont" 
                                  TextBlock.Foreground="{DynamicResource NormalTextBrush}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  Margin="{TemplateBinding Padding}" 
                                  ContentSource="Header" 
                                  RecognizesAccessKey="True"
                                  VerticalAlignment="Center" />
            </DockPanel>
            <Popup x:Name="PART_Popup" 
                   Focusable="false" 
                   AllowsTransparency="true" 
                   HorizontalOffset="1" 
                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                   Placement="Bottom" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                   VerticalOffset="-1">
                <ContentControl x:Name="SubMenuBorder" 
                                IsTabStop="false" 
                                Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                    <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" 
                                  CanContentScroll="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                        Margin="2" 
                                        Grid.IsSharedSizeScope="true" 
                                        KeyboardNavigation.DirectionalNavigation="Cycle" 
                                        KeyboardNavigation.TabNavigation="Cycle"/>
                    </ScrollViewer>
                </ContentControl>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
					<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
					<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
				</Trigger>-->
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource MenuBackgroundHoverBrush}"/>
                <Setter Property="TextBlock.Foreground" TargetName="cont" Value="{DynamicResource MenuSelectedTextBrush}"/>
                <!--<Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource MenuBorderBrush}"/>-->
            </Trigger>
            <!--<Trigger Property="IsKeyboardFocused" Value="true">
					<Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
					<Setter Property="Fill" TargetName="Bg" Value="{DynamicResource MenuItemPressedFillBrush}"/>
					<Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
				</Trigger>-->
            <Trigger Property="IsSubmenuOpen" Value="true">
                <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource MenuSelectedBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="{DynamicResource MenuGlyphDisabledBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" 
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="OuterBorder" 
                       RadiusX="2" 
                       RadiusY="2"/>
            <Rectangle x:Name="Bg" 
                       Margin="1" 
                       Fill="{TemplateBinding Background}" 
                       Stroke="{TemplateBinding BorderBrush}" 
                       StrokeThickness="1" 
                       RadiusX="1" 
                       RadiusY="1"/>
            <Rectangle x:Name="InnerBorder" 
                       Margin="2"/>
            <DockPanel>
                <ContentPresenter x:Name="Icon" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  Margin="4,0,6,0" 
                                  VerticalAlignment="Center" 
                                  ContentSource="Icon"/>
                <Path x:Name="GlyphPanel" 
                      Visibility="Collapsed" 
                      FlowDirection="LeftToRight" 
                      Margin="7,0,0,0" 
                      VerticalAlignment="Center" 
                      HorizontalAlignment="Center"
                      StrokeThickness="2"
                      Stroke="{DynamicResource MenuGlyphBrush}" 
                      Data="{DynamicResource NormalCheckMark}"/>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  TextBlock.Foreground="{DynamicResource NormalTextBrush}"
                                  Margin="{TemplateBinding Padding}" 
                                  ContentSource="Header" 
                                  RecognizesAccessKey="True"
                                  VerticalAlignment="Center" />
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <!--<Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Stroke" TargetName="Bg" Value="#90717070"/>
                <Setter Property="Stroke" TargetName="OuterBorder" Value="#50FFFFFF"/>
                <Setter Property="Stroke" TargetName="InnerBorder" Value="#50FFFFFF"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
                <Setter Property="Fill" TargetName="Bg" Value="{DynamicResource MenuItemPressedFillBrush}"/>
                <Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
            </Trigger>-->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="{DynamicResource MenuGlyphDisabledBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" 
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="Bg" 
                       Fill="{TemplateBinding Background}"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  Margin="1" 
                                  VerticalAlignment="Center" 
                                  ContentSource="Icon"/>
                <Border x:Name="GlyphPanel" 
                        Visibility="Hidden" 
                        Margin="1" 
                        Width="20" 
                        Height="20" 
                        Background="{DynamicResource MenuItemIconBackgroundBrush}" 
                        BorderBrush="{DynamicResource MenuCheckboxBorderBrush}" 
                        BorderThickness="1">
                    <Path x:Name="Glyph" 
                          VerticalAlignment="Center" 
                          StrokeThickness="2"
                          HorizontalAlignment="Center"
                          SnapsToDevicePixels="False"
                          Stroke="{DynamicResource MenuGlyphBrush}" 
                          Data="{DynamicResource NormalCheckMark}"/>
                </Border>
                <ContentPresenter x:Name="cont" 
                                  TextBlock.Foreground="{DynamicResource NormalTextBrush}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  Margin="{TemplateBinding Padding}" 
                                  Grid.Column="2" 
                                  ContentSource="Header" 
                                  RecognizesAccessKey="True"
                                  VerticalAlignment="Center" />
                <TextBlock Visibility="Collapsed" 
                           Margin="{TemplateBinding Padding}" 
                           Grid.Column="4" 
                           Text="{TemplateBinding InputGestureText}"
                           VerticalAlignment="Center" />
                <Path x:Name="rightArrow" Margin="4,0,0,0" 
                      VerticalAlignment="Center" 
                      Fill="{DynamicResource MenuGlyphBrush}" 
                      Grid.Column="5" 
                      Data="{StaticResource RightArrow}"/>
            </Grid>
            <Popup x:Name="PART_Popup" 
                   Focusable="false" 
                   AllowsTransparency="true" 
                   HorizontalOffset="-2" 
                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                   Placement="Right" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
                <ContentControl x:Name="SubMenuBorder" 
                                IsTabStop="false" 
                                Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                    <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" 
                                  CanContentScroll="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                        Margin="2" 
                                        Grid.IsSharedSizeScope="true" KeyboardNavigation.DirectionalNavigation="Cycle" 
                                        KeyboardNavigation.TabNavigation="Cycle"/>
                    </ScrollViewer>
                </ContentControl>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
					<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
					<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
				</Trigger>-->
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Fill" TargetName="Bg" Value="{DynamicResource MenuBackgroundHoverBrush}"/>
                <Setter Property="Fill" TargetName="rightArrow" Value="{DynamicResource MenuRightArrowHighlightedBrush}"/>
                <Setter Property="TextBlock.Foreground" TargetName="cont" Value="{DynamicResource MenuSelectedTextBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}"/>
                <Setter Property="Stroke" TargetName="Glyph" Value="{DynamicResource MenuGlyphDisabledBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Header" Value="{Binding Path=Command.Text, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" 
                        Value="7,2,8,3"/>
                <Setter Property="Template" 
                        Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" 
                        Value="7,2,8,3"/>
                <Setter Property="Template" 
                        Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Padding" 
                        Value="2,3,2,3"/>
                <Setter Property="Template" 
                        Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Padding" 
                        Value="2,3,2,3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource NormalTextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" 
                            Background="{DynamicResource MenuItemBackgroundBrush}" 
                            BorderThickness="1" 
                            BorderBrush="{DynamicResource MenuBorderBrush}">
                        <ScrollViewer CanContentScroll="True" 
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" 
                                            Margin="{TemplateBinding Padding}" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" 
                                    Property="Padding" 
                                    Value="0,3,0,3" />
                            <Setter TargetName="Border" 
                                    Property="CornerRadius" 
                                    Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="30,4,0,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Background="{DynamicResource MenuSeparatorBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextSeparatorStyle" TargetType="Separator">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <TextBlock Foreground="{DynamicResource LightContrastBrush}" TextAlignment="Center" FontStyle="Italic" FontWeight="ExtraBlack" TextWrapping="Wrap" Text="{TemplateBinding net:PNUtils.GroupData}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>