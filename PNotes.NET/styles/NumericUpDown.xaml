<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:pnNumericUpDown="clr-namespace:PNNumericUpDown;assembly=PNNumericUpDown">
    <Geometry x:Key="UpArrow">M 4 8 L 8 2 L 12 8 Z</Geometry>

    <Style x:Key="PathArrowUp" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="{StaticResource UpArrow}"/>
        <Setter Property="Fill" Value="{DynamicResource NumericUpDownArrowBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" Value="{DynamicResource NumericUpDownDisabledArrowBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PathArrowDown" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="{StaticResource UpArrow}"/>
        <Setter Property="Fill" Value="{DynamicResource NumericUpDownArrowBrush}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <RotateTransform Angle="180"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" Value="{DynamicResource NumericUpDownDisabledArrowBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RepeatButtonArrowUp" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Height" Value="10"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="MinWidth" Value="16"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="Border" Background="{DynamicResource ButtonBackgroundBrush}"/>
                        <Path x:Name="PathArrow" Data="{StaticResource UpArrow}" Fill="{DynamicResource NumericUpDownArrowBrush}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource ButtonBackgroundHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource ButtonBackgroundPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="PathArrow"
                                    Property="Fill"
                                    Value="{DynamicResource NumericUpDownDisabledArrowBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonArrowDown" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Height" Value="10"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="MinWidth" Value="16"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="Border" Background="{DynamicResource ButtonBackgroundBrush}"/>
                        <Path x:Name="PathArrow" Data="{StaticResource UpArrow}" Fill="{DynamicResource NumericUpDownArrowBrush}">
                            <Path.LayoutTransform>
                                <RotateTransform Angle="180"/>
                            </Path.LayoutTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource ButtonBackgroundHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource ButtonBackgroundPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="PathArrow"
                                    Property="Fill"
                                    Value="{DynamicResource NumericUpDownDisabledArrowBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type pnNumericUpDown:NumericUpDown}">
        <Setter Property="Foreground" Value="{DynamicResource NormalTextBrush}"/>
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinHeight" Value="21"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pnNumericUpDown:NumericUpDown}">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource CommonCornerRadius}"
                            TextBlock.Foreground="{TemplateBinding Foreground}">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" x:Name="PART_Text" VerticalAlignment="Center" TextAlignment="Right" VerticalContentAlignment="Center" BorderThickness="0"/>
                            <Grid Grid.Column="1" VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <RepeatButton x:Name="PART_Up" Style="{StaticResource RepeatButtonArrowUp}" Padding="0" />
                                <RepeatButton x:Name="PART_Down" Grid.Row="1" Style="{StaticResource RepeatButtonArrowDown}" Padding="0"  Margin="0,1,0,0"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsValueNegative" Value="true">
                            <Setter Property="Foreground" TargetName="PART_Text">
                                <Setter.Value>
                                    <Binding Path="NegativeForeground" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=pnNumericUpDown:NumericUpDown}" Mode="OneWay"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" TargetName="PART_Text" Value="{DynamicResource DisabledTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>